{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "Creates the VPC private subnets with NAT gateway.",
    
    "Parameters" : {
        "VPCParameter" : {
          "Type" : "String",
          "Description" : "VPC ARN from 1-vpc.json"
        },
        "InternetGateway" : {
            "Type" : "String",
            "Description" : "Internet Gateway ARN from 2-vpc-public-subnet.json"
        },
        "PublicSubnet1" : {
            "Type" : "String",
            "Description" : "Public Subnet 1 ARN from 2-vpc-public-subnet.json"
        },
        "PublicRouteTable" : {
            "Type" : "String",
            "Description" : "Public Route Table ARN from 2-vpc-public-subnet.json"
        }
      },

      "Mappings" : {
        "SubnetMap" : {
            "PrivateSubnets" : {
                "PRIVATE1" : "172.16.64.0/19",
                "PRIVATE2" : "172.16.96.0/19"
            }
        }
      },


      "Resources" : {

        "myPrivateSubnet1" : {
            "Type" : "AWS::EC2::Subnet",
            "Properties" : {
               "VpcId" : { "Ref" : "VPCParameter" },
               "CidrBlock" : {
                "Fn::FindInMap" : [
                    "SubnetMap",
                    "PrivateSubnets",
                    "PRIVATE1"
                ]},
               "AvailabilityZone" : {
                "Fn::Select" : [ 
                  "0", 
                  { 
                    "Fn::GetAZs" : "" 
                  } 
                ]
              },
               "Tags" : [ 
                   { "Key" : "Name", "Value" : "myPrivateSubnet1" } 
                ]
            }
         },

         "myPrivateSubnet2" : {
            "Type" : "AWS::EC2::Subnet",
            "Properties" : {
               "VpcId" : { "Ref" : "VPCParameter" },
               "CidrBlock" : {
                "Fn::FindInMap" : [
                    "SubnetMap",
                    "PrivateSubnets",
                    "PRIVATE2"
                ]},
               "AvailabilityZone" : {
                "Fn::Select" : [ 
                  "1", 
                  { 
                    "Fn::GetAZs" : "" 
                  } 
                ]
              },
               "Tags" : [ 
                   { "Key" : "Name", "Value" : "myPrivateSubnet2" } 
                ]
            }
         },

         "myPrivateRouteTable" : {
            "Type" : "AWS::EC2::RouteTable",
            "Properties" : {
               "VpcId" : { "Ref" : "VPCParameter" },
               "Tags" : [ { "Key" : "Name", "Value" : "myPrivateRouteTable" } ]
            }
         },
        
         "myPrivateSubnet1RouteTableAssociation" : {
            "Type" : "AWS::EC2::SubnetRouteTableAssociation",
            "Properties" : {
               "SubnetId" : { "Ref" : "myPrivateSubnet1" },
               "RouteTableId" : { "Ref" : "myPrivateRouteTable" }
            }
         },

         "myPrivateSubnet2RouteTableAssociation" : {
            "Type" : "AWS::EC2::SubnetRouteTableAssociation",
            "Properties" : {
               "SubnetId" : { "Ref" : "myPrivateSubnet2" },
               "RouteTableId" : { "Ref" : "myPrivateRouteTable" }
            }
         },

         "myPrivateNetworkAcl" : {
            "Type" : "AWS::EC2::NetworkAcl",
            "Properties" : {
               "VpcId" : { "Ref" : "VPCParameter" },
               "Tags" : [ { "Key" : "Name", "Value" : "myPrivateNetworkAcl" } ]
            }
         },

         "myPrivateNetworkAclEntry1" : {
            "Type" : "AWS::EC2::NetworkAclEntry",
            "Properties" : {
               "NetworkAclId" : { "Ref" : "myPrivateNetworkAcl" },
               "RuleNumber" : "100",
               "Protocol" : "-1",
               "RuleAction" : "allow",
               "Egress" : "true",
               "CidrBlock" : "0.0.0.0/0"
            }
         },

         "myPrivateNetworkAclEntry2" : {
            "Type" : "AWS::EC2::NetworkAclEntry",
            "Properties" : {
               "NetworkAclId" : { "Ref" : "myPrivateNetworkAcl" },
               "RuleNumber" : "100",
               "Protocol" : "-1",
               "RuleAction" : "allow",
               "Egress" : "false",
               "CidrBlock" : "0.0.0.0/0"
            }
         },

         "mySubnetNetworkAclAssociation1" : {
            "Type" : "AWS::EC2::SubnetNetworkAclAssociation",
            "Properties" : {
               "SubnetId" : { "Ref" : "myPrivateSubnet1" },
               "NetworkAclId" : { "Ref" : "myPrivateNetworkAcl" }
            }
         },

         "mySubnetNetworkAclAssociation2" : {
            "Type" : "AWS::EC2::SubnetNetworkAclAssociation",
            "Properties" : {
               "SubnetId" : { "Ref" : "myPrivateSubnet2" },
               "NetworkAclId" : { "Ref" : "myPrivateNetworkAcl" }
            }
         },

         "myEIP" : {
            "Type" : "AWS::EC2::EIP",
            "Properties" : {
               "Domain" : "vpc"
            }
         },

         "myNAT" : {
            "Type" : "AWS::EC2::NatGateway",
            "Properties" : {
               "AllocationId" : { "Fn::GetAtt" : ["myEIP", "AllocationId"]},
               "SubnetId" : { "Ref" : "PublicSubnet1"},
               "Tags" : [ {"Key" : "Name", "Value" : "myNAT" } ]
              }
         },

         "myNatRoute" : {
            "Type" : "AWS::EC2::Route",
            "Properties" : {
               "RouteTableId" : { "Ref" : "myPrivateRouteTable" },
               "DestinationCidrBlock" : "0.0.0.0/0",
               "NatGatewayId" : { "Ref" : "myNAT" }
            }
         }

      },

      "Outputs": {
        "StackPrivateSubnet1" : {
            "Description" : "Private Subnet 1",
            "Value" : {"Ref" :  "myPrivateSubnet1"},
            "Export" : {
                "Name" : { "Fn::Sub" : "${AWS::StackName}-PrivSubnet1" }
            }
        },
        "StackPrivateSubnet2" : {
            "Description" : "Private Subnet 2",
            "Value" : {"Ref" :  "myPrivateSubnet2"},
            "Export" : {
                "Name" : { "Fn::Sub" : "${AWS::StackName}-PrivSubnet2" }
            }
        }
    }
}